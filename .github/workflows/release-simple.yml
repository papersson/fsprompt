name: Simple Release

on:
  push:
    tags:
      - 'v[0-9]+.*'

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: tar.gz

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../fsprompt-${{ github.ref_name }}-${{ matrix.target }}.tar.gz fsprompt
          cd ../../..

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd target\${{ matrix.target }}\release
          Compress-Archive -Path fsprompt.exe -DestinationPath ..\..\..\fsprompt-${{ github.ref_name }}-${{ matrix.target }}.zip
          cd ..\..\..

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            fsprompt-${{ github.ref_name }}-${{ matrix.target }}.${{ matrix.ext }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}